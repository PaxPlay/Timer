# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

# The extension version is MAJOR.MINOR.GIT_COMMIT[VERSION_SUFFIX] ex: 1.0.5a
VERSION_MAJOR = '0'
VERSION_MINOR = '1'
VERSION_SUFFIX = 'a'

projectName = 'Timer'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
  'CHookManager.cpp',
  'CVFuncs.cpp',
  'CUtility.cpp',
  'CMapZones.cpp',
  'CRootConsoleCmds.cpp',
  'CTimerClients.cpp',
  'CGameEventListener.cpp',
  'IBaseHud.cpp',
  'CClientCommands.cpp',
  'Commands.cpp',
  'CAssetManager.cpp',
]

includeDirectorys = [
  '../../src',
]

project = Extension.HL2Project(builder, projectName + '.ext')

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

for sourceFile in sourceFiles:
  project.sources += [os.path.join('src', sourceFile),]

for includeDirectory in includeDirectorys:
  project.compiler.includes += [includeDirectory,]

# Create version.h with the current git commit number (kinda not working rn)
"""
builder.AddCommand(project.sources, [
  'bash',
  '-c',
  'echo '
  '"#define TIMER_COMMIT \\"`git rev-list --count --first-parent HEAD`\\" // automatically generated by the build script"'
  '>../src/version.h',
], [], None)
"""

project.compiler.defines += [
  'TIMER_MAJOR="' + VERSION_MAJOR + '"',
  'TIMER_MINOR="' + VERSION_MINOR + '"',
  'TIMER_SUFFIX="' + VERSION_SUFFIX + '"',
]

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  
  binary = Extension.HL2Config(project, projectName + '.ext.' + sdk.ext, sdk)

Extension.extensions = builder.Add(project)